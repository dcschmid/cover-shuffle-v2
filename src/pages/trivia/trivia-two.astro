---
import { For } from "@astropub/flow";

import Layout from "../../layouts/Layout.astro";
import TriviaItem from "../../components/Trivia/TriviaItem.astro";
import TimeupsOverlay from "../../components/Overlays/TimeupsOverlay.astro";
import TriviaLostOverlay from "../../components/Trivia/TriviaLostOverlay.astro";
import TriviaWonOverlay from "../../components/Trivia/TriviaWonOverlay.astro";
import { shuffleArray } from "../../utils/shared/shuffleArray";
import { triviaTwoData } from "../../data/triviaTwoData";
import TriviaStartOverlay from "../../components/Trivia/TriviaStartOverlay.astro";
import IntroText from "../../components/Shared/IntroText.astro";
import Timer from "../../components/Round/Timer.astro";
import TriviaWonLPOverlay from "../../components/Trivia/TriviaWonLPOverlay.astro";

const randomizedTriviaData = shuffleArray(triviaTwoData);
---

<Layout title="Trivia Runde 2" showUserLink={false}>
  <div slot="left-headercol"></div>

  <TriviaStartOverlay
    question="Das Design Studio welchen Plattencovers hat außerdem auch das Logo des Musiksenders MTV gestaltet?"
  />

  <TimeupsOverlay url="/trivia/trivia-two-solution" />

  <TriviaLostOverlay url="/trivia/trivia-two-solution" />

  <TriviaWonOverlay url="/trivia/trivia-two-solution" />

  <TriviaWonLPOverlay url="/trivia/trivia-two-solution" />

  <IntroText
    headline="Runde 2 / 3 – Trivia Frage"
    subline="Das Design Studio welchen Plattencovers hat außerdem auch das Logo des Musiksenders MTV gestaltet?"
    whiteText=""
    isSmallHeadline={true}
    isWhiteSubline={true}
  />

  <div class="trivia">
    <For of={randomizedTriviaData}>
      {
        (item: any) => (
          <div class={item.type}>
            <TriviaItem band={item.band} album={item.album} image={item.coverSrc} />
          </div>
        )
      }
    </For>
  </div>

  <Timer minutes="00" seconds="10" showFinishButton={false} />
</Layout>

<style>
  .trivia {
    display: flex;
    flex-wrap: wrap;
    padding: var(--spacing-1) var(--spacing-spacing-xl) var(--spacing-15) var(--spacing-spacing-xl);
    align-items: center;
    justify-content: center;
    gap: var(--spacing-spacing-xl);
  }
</style>

<script>
  import { updateTime } from "../../utils/shared/updateTime";
  import { initLostOverlay } from "../../utils/trivia/initLostOverlay";
  import { handleWonClick } from "../../utils/trivia/wonHandler";

  const overlayTimeUp = document.getElementById("timupsOverlay") as HTMLElement;
  const overlayStart = document.getElementById("overlayStart") as HTMLElement;
  const overlayLost = document.getElementById("overlayLost") as HTMLElement;
  const overlayWon = document.getElementById("overlayWon") as HTMLElement;
  const gameButton = document.getElementById("gameButton") as HTMLElement;

  let timeRemaining = 10;
  let timerInterval: any;

  window.addEventListener("load", function (_event: Event): void {
    overlayTimeUp.style.visibility = "hidden";
    overlayLost!.style.visibility = "hidden";
    overlayWon!.style.visibility = "hidden";
    overlayStart.style.visibility = "visible";

    gameButton.addEventListener("click", startTimer);

    document.querySelector(".trivia .won")!.addEventListener("click", () => {
      handleWonClick(timerInterval, "PointsRound2", "allCorrectRound2", "triviaRound2Won");
    });

    initLostOverlay(timerInterval, "triviaRound2Won", "currentPoints");
  });

  /**
   * Starts the timer by setting an interval to call the updateTime function every second.
   * Hides the overlayStart element.
   */
  function startTimer() {
    // Set an interval to call the updateTime function every second
    // The updateTime function updates the timer display and checks if the timer has reached zero
    timerInterval = window.setInterval(() => {
      // Call the updateTime function with the current timeRemaining value
      updateTime(timeRemaining);

      // Decrement the timeRemaining value and check if it has reached zero
      if (--timeRemaining < 0) {
        // If the timer has reached zero, hide the timer overlay
        // Clear the timer interval to stop the timer
        clearInterval(timerInterval!);
        overlayTimeUp.style.visibility = "visible";
      }
    }, 1000);

    // Hide the overlayStart element to show the gameboard
    overlayStart.style.visibility = "hidden";
  }
</script>
